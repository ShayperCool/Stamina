{"version":3,"sources":["game/hand.js","game/staminaButton.js","game/game.js","index.js"],"names":["Hand","props","fingers","colors","console","log","currentFinger","selectedFinger","offset","index","push","Finger","enabled","enabledColor","style","display","backgroundColor","width","height","margin","StaminaButton","className","callback","onSolved","state","clicked","this","clickListener","event","window","eventd","character","String","fromCharCode","keyCode","setState","document","onkeypress","removeEventListener","color","onAnimationEnd","React","Component","Game","characters","getRandomCharacter","finger","getFinger","Math","floor","random","length","Object","entries","key","value","includes","top","left","position","right","transform","getColor","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.579f0d0b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Hand(props){\r\n    const fingers = [];\r\n    const colors = ['#ED1C24', '#FF7F27', '#FFF200', '#22B14C', '#00A2E8', '#00A2E8', '#A349A4', '#C8BFE7', '#7092BE', '#B5E61D'];\r\n    console.log(props.currentFinger)\r\n    const selectedFinger = (props.offset ? (props.currentFinger - props.offset) : props.currentFinger);\r\n    for (let index = 0; index < 5; index++) {\r\n        fingers.push(<Finger key={index} enabled={selectedFinger === index} enabledColor={colors[props.currentFinger]}/>);\r\n    }\r\n\r\n    return (\r\n        <div style={props.style}>\r\n            <div style={{display: 'inline-flex'}}>\r\n                {fingers}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\nfunction Finger(props){\r\n    return (<div style={\r\n        {\r\n            backgroundColor: props.enabled ? props.enabledColor : 'gray',\r\n            width: '50pt',\r\n            height: '50pt',\r\n            margin: '5pt'\r\n        }\r\n    }/>)\r\n    \r\n}\r\n\r\n\r\nexport { Hand }","import React from 'react'\r\nimport './staminaButton.css'\r\nimport Hand from './hand'\r\n\r\nclass StaminaButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.className = \"staminaButton\";\r\n        this.callback = props.onSolved;\r\n        this.state = {\r\n            clicked: false\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.clickListener = (event) => {\r\n            event = event || window.eventd;\r\n            if(this.props.character != String.fromCharCode(event.keyCode))\r\n                return;\r\n            this.callback();\r\n            this.setState({\r\n                clicked: true,\r\n            })\r\n        }\r\n\r\n        document.onkeypress = this.clickListener;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener('keypress', this.clickListener, false);\r\n    }\r\n\r\n    render(){\r\n        const color = this.props.color;\r\n        return (\r\n            <div\r\n                style={\r\n                    {\r\n                        backgroundColor: color\r\n                    }\r\n                }\r\n                className={this.className + (this.state.clicked ? \" pressAnimation\" : \"\")}\r\n                onAnimationEnd={()=> this.setState({clicked: false})}>\r\n                {this.props.character}\r\n            </div>            \r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {StaminaButton}","import React from 'react'\r\nimport { StaminaButton } from './staminaButton';\r\nimport {Hand} from './hand'\r\n\r\nclass Game extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.characters = \"abcdefghijklmnopqrstuvwxyz\";\r\n        const character = this.getRandomCharacter();\r\n        this.colors = ['#ED1C24', '#FF7F27', '#FFF200', '#22B14C', '#00A2E8', '#00A2E8', '#A349A4', '#C8BFE7', '#7092BE', '#B5E61D'];\r\n        this.state = {\r\n            character: character,\r\n            finger: this.getFinger(character)\r\n        };\r\n        \r\n    }\r\n\r\n    onSolved(){\r\n        const character = this.getRandomCharacter();\r\n        this.setState({\r\n            character: character,\r\n            finger: this.getFinger(character)\r\n        })\r\n    }\r\n\r\n    getRandomCharacter(){\r\n        return this.characters[Math.floor(Math.random() * this.characters.length)]\r\n    }\r\n\r\n    getFinger(character){\r\n        const map = {\r\n            '`qa' : 0,\r\n            '@!12wsz' : 1,\r\n            '#$34edx' : 2,\r\n            '%^56rfcvgtb' : 3,\r\n            ' ' : 4,\r\n            '&7yuhjnm' : 6,\r\n            '*(89ik,' : 7,\r\n            ')0ol>' : 8,\r\n            '-=_+p[]{};\\'>.?/' : 9\r\n        };\r\n        for(const [key, value] of Object.entries(map)){\r\n            if(key.includes(character)){\r\n                return value;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getColor(finger){\r\n        return this.colors[finger];\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Hand style={{\r\n                    top: '50%',\r\n                    left: '1%',\r\n                    position: 'absolute'\r\n                }} currentFinger={this.state.finger}/>\r\n                <Hand style={{\r\n                    top: '50%',\r\n                    right: '1%',\r\n                    position: 'absolute'\r\n                }\r\n                } offset={5} currentFinger={this.state.finger}/>\r\n                <div style={\r\n                {\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)'\r\n                }\r\n                }>\r\n                    <StaminaButton color={this.getColor(this.state.finger)} onSolved={() => this.onSolved()} character={this.state.character}/>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport {Game}","import ReactDOM from 'react-dom'\r\nimport {Game} from './game/game'\r\n\r\nReactDOM.render(<Game/>, document.getElementById('root'))"],"sourceRoot":""}